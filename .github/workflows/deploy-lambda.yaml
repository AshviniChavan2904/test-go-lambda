name: Build and Deploy Lambda Function

on:
  workflow_dispatch:
    inputs:
      Action:
        description: Terraform Action to be performed
        type: choice
        required: true
        options:
        - Plan
        - Apply
        - Destroy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'  # Specify the Go version

      - name: Initialize Go modules
        run: |
          cd go-code
          go mod init mylambda


      - name: Install AWS Lambda Go SDK dependencies
        run: |
          go get github.com/aws/aws-lambda-go/lambda
          go get github.com/aws/aws-lambda-go/events
        working-directory: go-code  

      - name: Build the Go Lambda function
        run: GOOS=linux GOARCH=amd64 go build -o main main.go
        working-directory: go-code

      - name: Package the Lambda function
        run: zip ../lambda-package.zip main

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: lambda-artifact
          path: lambda-package.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job completes before deploying

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: lambda-artifact

      - name: Configure AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && aws configure set region "us-east-1"

      - name: Upload code to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp lambda-package.zip s3://test-bucket-ashvini/ 
          
      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code \
            --function-name my-go-lambda \
            --s3-bucket test-bucket-ashvini \
            --s3-key lambda-package.zip

  deploy-tf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init
  
      - name: Apply Terraform configuration
        if: ${{ github.event.inputs.Action == 'Plan' }}
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run:  terraform plan 
  
      - name: Apply Terraform configuration
        if: ${{ github.event.inputs.Action == 'Apply' }}
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve
  
      - name: Destroy Terraform configuration
        if: ${{ github.event.inputs.Action == 'Destroy' }}
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve  
